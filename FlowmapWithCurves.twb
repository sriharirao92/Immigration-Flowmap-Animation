<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.3' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xml:base='https://us-east-1.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='FlowmapWithBeizerCurves' path='/t/raghaven/workbooks' revision='1.6' site='raghaven' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='NewFlowMapData' inline='true' name='federated.1vuxxw10rtyrsc1fdluqb1qgrdcj' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NewFlowMapData' name='textscan.1u98c2w1fukpvb1g8fkob1ct3zxw'>
            <connection class='textscan' directory='//homedir.mtu.edu/home/Desktop' filename='NewFlowMapData.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1u98c2w1fukpvb1g8fkob1ct3zxw' name='NewFlowMapData.csv' table='[NewFlowMapData#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier=''>
            <column datatype='string' name='Target Latitude' ordinal='0' />
            <column datatype='string' name='Origin Latitude' ordinal='1' />
            <column datatype='string' name='Target Longitude' ordinal='2' />
            <column datatype='real' name='Origin Longitude' ordinal='3' />
            <column datatype='string' name='Origin' ordinal='4' />
            <column datatype='string' name='Immigrants' ordinal='5' />
            <column datatype='string' name='Target Name' ordinal='6' />
            <column datatype='string' name='Path' ordinal='7' />
            <column datatype='string' name='Path Order' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Target Latitude]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Target Latitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin Latitude]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Origin Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Target Longitude]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Target Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Origin Longitude]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Origin Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Immigrants</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Immigrants]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Immigrants</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Target Name]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Target Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path Order</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path Order]</local-name>
            <parent-name>[NewFlowMapData.csv]</parent-name>
            <remote-alias>Path Order</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Origin Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.576739' measure-ordering='alphabetic' measure-percentage='0.423261' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='NewFlowMapData (NewFlowMapData)' inline='true' name='federated.14y3npy074zjaf1500fnq1x97zd3' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NewFlowMapData' name='excel-direct.0drms9u01ew1dy1ayrpja16c1al5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='//homedir.mtu.edu/home/Desktop/NewFlowMapData.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0drms9u01ew1dy1ayrpja16c1al5' name='NewFlowMapData' table='[NewFlowMapData$]' type='table'>
          <columns gridOrigin='A1:I3225:no:A1:I3225:0' header='yes' outcome='2'>
            <column datatype='real' name='Target Latitude' ordinal='0' />
            <column datatype='real' name='Origin Latitude' ordinal='1' />
            <column datatype='real' name='Target Longitude' ordinal='2' />
            <column datatype='real' name='Origin Longitude' ordinal='3' />
            <column datatype='string' name='Origin' ordinal='4' />
            <column datatype='integer' name='Immigrants' ordinal='5' />
            <column datatype='string' name='Target Name' ordinal='6' />
            <column datatype='integer' name='Path' ordinal='7' />
            <column datatype='integer' name='Path Order' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Target Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Target Latitude]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Target Latitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Origin Latitude]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Origin Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Target Longitude]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Target Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Origin Longitude]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Origin Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Immigrants</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Immigrants]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Immigrants</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Target Name]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Target Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path Order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Path Order]</local-name>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias>Path Order</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NewFlowMapData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I3225:no:A1:I3225:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='BezierValue (bin)' datatype='integer' name='[BezierValue (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_785174482481082368]' peg='0' size='1' />
      </column>
      <column caption='MaxImmigrant' datatype='integer' name='[Calculation_1246652732521828358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Immigrants])' />
      </column>
      <column caption='t' datatype='real' name='[Calculation_1540610222319845]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2240610222244150]-1)/100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_2240610222244150]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Index()'>
          <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='gc_ptlon1_radians' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666117332992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RADIANS(window_min(min([Origin Longitude]),FIRST(),FIRST()))'>
          <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='gc_distance_radians' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666118152193]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2*ASIN(sqrt(POWER((sin(([gc_ptlon1_radians (copy)]-[gc_ptat1_radians (copy)])/2)),2) &#10;+ cos([gc_ptlon1_radians (copy)])*cos([gc_ptat1_radians (copy)])*power((sin(([Calculation_37717666117332992]-[gc_ptlon1_radians (copy 2)])/2)),2)))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_a' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666119438339]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sin((1-[Calculation_1540610222319845])*[Calculation_37717666118152193])/sin([Calculation_37717666118152193])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_x' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666119933956]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_37717666119438339]*cos([gc_ptlon1_radians (copy)])*cos([Calculation_37717666117332992]) + [gc_a (copy)]*cos([gc_ptat1_radians (copy)])*cos([gc_ptlon1_radians (copy 2)])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_y' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120077317]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_37717666119438339]*cos([gc_ptlon1_radians (copy)])*sin([Calculation_37717666117332992]) +  [gc_a (copy)]*cos([gc_ptat1_radians (copy)])*sin([gc_ptlon1_radians (copy 2)])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_z' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120261638]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_37717666119438339]*sin([gc_ptlon1_radians (copy)]) + [gc_a (copy)]*sin([gc_ptat1_radians (copy)])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_newlat' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120474631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='atan2([Calculation_37717666120261638],sqrt(power([Calculation_37717666119933956],2)+power([Calculation_37717666120077317],2)))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_newlon' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120761352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='atan2([Calculation_37717666120077317],[Calculation_37717666119933956])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_newlat_degress' datatype='real' default-format='n#,##0.00' name='[Calculation_37717666121023497]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='case [Calculation_2240610222244150]&#10;when 1 then WINDOW_MIN((AVG([Origin Latitude])),FIRST(),FIRST())&#10;when 100 then WINDOW_MIN((AVG([Target Latitude])),LAST(),LAST())&#10;else DEGREES([Calculation_37717666120474631])&#10;END'>
          <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='gc_newlon_degrees' datatype='real' default-format='n#,##0.00' name='[Calculation_37717666121089034]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='CASE [Calculation_2240610222244150]&#10;when 1 THEN WINDOW_MIN((AVG([Origin Longitude])),FIRST(),FIRST())&#10;WHEN 100 THEN WINDOW_MIN((AVG([Target Longitude])),LAST(),LAST())&#10;ELSE DEGREES([Calculation_37717666120761352])&#10;END'>
          <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='gc_newlat_degree_dashed' datatype='real' name='[Calculation_45528605320114176]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_2240610222244150]%4=0 AND [Calculation_2240610222244150] &lt;&gt; 1 AND [Calculation_2240610222244150] &lt;&gt; 100 THEN NULL     &#10;else [Calculation_37717666121023497]&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='BezierValue' datatype='integer' name='[Calculation_785174482481082368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Path Order] = 1,1,100)' />
      </column>
      <column aggregation='CountD' datatype='integer' name='[Immigrants]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Origin Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Origin Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Path]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Target Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Target Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Target Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='gc_b' datatype='real' default-format='n#,##0.0000' name='[gc_a (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sin([Calculation_1540610222319845]*[Calculation_37717666118152193])/sin([Calculation_37717666118152193])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='gc_ptlat2_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptat1_radians (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RADIANS(window_min(min([Target Latitude]),LAST(),LAST()))'>
          <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='gc_ptlon2_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptlon1_radians (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RADIANS(window_min(min([Target Longitude]),LAST(),LAST()))'>
          <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='gc_ptlat1_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptlon1_radians (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RADIANS(WINDOW_MIN(min([Origin Latitude]),FIRST(),FIRST()))'>
          <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
            <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
          </table-calc>
        </calculation>
      </column>
      <column-instance column='[Origin Latitude]' derivation='Avg' name='[avg:Origin Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Target Latitude]' derivation='Avg' name='[avg:Target Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BezierValue (bin)]' derivation='None' name='[none:BezierValue (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Immigrants]' derivation='None' name='[none:Immigrants:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Origin Latitude]' derivation='None' name='[none:Origin Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
      <column-instance column='[Path]' derivation='None' name='[none:Path:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Target Name]' derivation='None' name='[none:Target Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_37717666121023497]' derivation='User' name='[usr:Calculation_37717666121023497:qk]' pivot='key' type='quantitative'>
        <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_2240610222244150]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119438339]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666118152193]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120474631]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120261638]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_1540610222319845]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666117332992]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptat1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy 2)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_a (copy)]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119933956]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120077317]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_37717666121089034]' derivation='User' name='[usr:Calculation_37717666121089034:qk]' pivot='key' type='quantitative'>
        <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_2240610222244150]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120761352]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119438339]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666118152193]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120077317]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_1540610222319845]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666117332992]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptat1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy 2)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
          <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
        </table-calc>
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_a (copy)]' ordering-type='Rows' />
        <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119933956]' ordering-type='Rows' />
      </column-instance>
      <group hidden='true' name='[Exclusions (BezierValue (bin),Immigrants,Origin,Path,Target Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:BezierValue (bin):ok]' />
          <groupfilter function='level-members' level='[none:Immigrants:qk]' />
          <groupfilter function='level-members' level='[none:Origin:nk]' />
          <groupfilter function='level-members' level='[none:Path:ok]' />
          <groupfilter function='level-members' level='[none:Target Name:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (BezierValue (bin),Immigrants,Path)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:BezierValue (bin):ok]' />
          <groupfilter function='level-members' level='[none:Immigrants:qk]' />
          <groupfilter function='level-members' level='[none:Path:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (BezierValue (bin),Immigrants,Path,Target Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:BezierValue (bin):ok]' />
          <groupfilter function='level-members' level='[none:Immigrants:qk]' />
          <groupfilter function='level-members' level='[none:Path:ok]' />
          <groupfilter function='level-members' level='[none:Target Name:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.201811' measure-ordering='alphabetic' measure-percentage='0.798189' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Target Name:nk]' palette='summer_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121023497:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121089034:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Origin Latitude:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin Latitude:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Latitude:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>US Immigration FlowMap</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NewFlowMapData (NewFlowMapData)' name='federated.14y3npy074zjaf1500fnq1x97zd3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14y3npy074zjaf1500fnq1x97zd3'>
            <column aggregation='None' caption='BezierValue (bin)' datatype='integer' name='[BezierValue (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_785174482481082368]' peg='0' size='1' />
            </column>
            <column caption='t' datatype='real' name='[Calculation_1540610222319845]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2240610222244150]-1)/100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_2240610222244150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Index()'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_ptlon1_radians' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666117332992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(window_min(min([Origin Longitude]),FIRST(),FIRST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_distance_radians' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666118152193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2*ASIN(sqrt(POWER((sin(([gc_ptlon1_radians (copy)]-[gc_ptat1_radians (copy)])/2)),2) &#10;+ cos([gc_ptlon1_radians (copy)])*cos([gc_ptat1_radians (copy)])*power((sin(([Calculation_37717666117332992]-[gc_ptlon1_radians (copy 2)])/2)),2)))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_a' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666119438339]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sin((1-[Calculation_1540610222319845])*[Calculation_37717666118152193])/sin([Calculation_37717666118152193])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_x' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666119933956]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_37717666119438339]*cos([gc_ptlon1_radians (copy)])*cos([Calculation_37717666117332992]) + [gc_a (copy)]*cos([gc_ptat1_radians (copy)])*cos([gc_ptlon1_radians (copy 2)])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_y' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120077317]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_37717666119438339]*cos([gc_ptlon1_radians (copy)])*sin([Calculation_37717666117332992]) +  [gc_a (copy)]*cos([gc_ptat1_radians (copy)])*sin([gc_ptlon1_radians (copy 2)])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_z' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120261638]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_37717666119438339]*sin([gc_ptlon1_radians (copy)]) + [gc_a (copy)]*sin([gc_ptat1_radians (copy)])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_newlat' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120474631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='atan2([Calculation_37717666120261638],sqrt(power([Calculation_37717666119933956],2)+power([Calculation_37717666120077317],2)))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_newlon' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120761352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='atan2([Calculation_37717666120077317],[Calculation_37717666119933956])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_newlat_degress' datatype='real' default-format='n#,##0.00' name='[Calculation_37717666121023497]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_2240610222244150]&#10;when 1 then WINDOW_MIN((AVG([Origin Latitude])),FIRST(),FIRST())&#10;when 100 then WINDOW_MIN((AVG([Target Latitude])),LAST(),LAST())&#10;else DEGREES([Calculation_37717666120474631])&#10;END'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_newlon_degrees' datatype='real' default-format='n#,##0.00' name='[Calculation_37717666121089034]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='CASE [Calculation_2240610222244150]&#10;when 1 THEN WINDOW_MIN((AVG([Origin Longitude])),FIRST(),FIRST())&#10;WHEN 100 THEN WINDOW_MIN((AVG([Target Longitude])),LAST(),LAST())&#10;ELSE DEGREES([Calculation_37717666120761352])&#10;END'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='BezierValue' datatype='integer' name='[Calculation_785174482481082368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Path Order] = 1,1,100)' />
            </column>
            <column aggregation='CountD' datatype='integer' name='[Immigrants]' role='dimension' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Origin Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Origin Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Path Order]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Path]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Target Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Target Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Target Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='gc_b' datatype='real' default-format='n#,##0.0000' name='[gc_a (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sin([Calculation_1540610222319845]*[Calculation_37717666118152193])/sin([Calculation_37717666118152193])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_ptlat2_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptat1_radians (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(window_min(min([Target Latitude]),LAST(),LAST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_ptlon2_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptlon1_radians (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(window_min(min([Target Longitude]),LAST(),LAST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_ptlat1_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptlon1_radians (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(WINDOW_MIN(min([Origin Latitude]),FIRST(),FIRST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column-instance column='[BezierValue (bin)]' derivation='None' name='[none:BezierValue (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Immigrants]' derivation='None' name='[none:Immigrants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Target Name]' derivation='None' name='[none:Target Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_37717666121023497]' derivation='User' name='[usr:Calculation_37717666121023497:qk]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_2240610222244150]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119438339]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666118152193]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120474631]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120261638]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_1540610222319845]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666117332992]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptat1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy 2)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_a (copy)]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119933956]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120077317]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_37717666121089034]' derivation='User' name='[usr:Calculation_37717666121089034:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_2240610222244150]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120761352]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119438339]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666118152193]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120077317]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_1540610222319845]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666117332992]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptat1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy 2)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_a (copy)]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119933956]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14y3npy074zjaf1500fnq1x97zd3].[Exclusions (BezierValue (bin),Immigrants,Origin,Path,Target Name)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:BezierValue (bin):ok]' />
                <groupfilter function='level-members' level='[none:Immigrants:qk]' />
                <groupfilter function='level-members' level='[none:Origin:nk]' />
                <groupfilter function='level-members' level='[none:Path:ok]' />
                <groupfilter function='level-members' level='[none:Target Name:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:BezierValue (bin):ok]' member='4' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Immigrants:qk]' member='67924' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Origin:nk]' member='&quot;Caribbean&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Path:ok]' member='158' />
                      <groupfilter function='member' level='[none:Target Name:nk]' member='&quot;California&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14y3npy074zjaf1500fnq1x97zd3].[Exclusions (BezierValue (bin),Immigrants,Path)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:BezierValue (bin):ok]' />
                <groupfilter function='level-members' level='[none:Immigrants:qk]' />
                <groupfilter function='level-members' level='[none:Path:ok]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BezierValue (bin):ok]' member='1' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Immigrants:qk]' member='1093' />
                    <groupfilter function='member' level='[none:Path:ok]' member='831' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BezierValue (bin):ok]' member='2' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Immigrants:qk]' member='3202' />
                    <groupfilter function='member' level='[none:Path:ok]' member='1022' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]'>
            <groupfilter function='member' level='[none:Target Name:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]</column>
            <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[Exclusions (BezierValue (bin),Immigrants,Path)]</column>
            <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[Exclusions (BezierValue (bin),Immigrants,Origin,Path,Target Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121089034:qk:3]' field-type='quantitative' max='52990256.213978499' min='3561793.2511995677' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121023497:qk]' field-type='quantitative' max='19210665.037067' min='-11119547.786490938' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' palette='orange_gold_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' value='Number of Immigrants' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]' value='Select US state'>
              <formatted-text>
                <run>Select US state</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' />
              <size column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' />
              <text column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin:nk]' />
              <text column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]' />
              <path column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin):ok]' />
              <lod column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin):ok]' />
              <lod column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Path:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Origin:&#9;&lt;[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Destination:  &lt;[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Immigrants:&#9;</run>
                <run bold='true'>&lt;[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#ff932d' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-transparency' value='224' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121023497:qk]</rows>
        <cols>[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121089034:qk:3]</cols>
        <show-full-range>
          <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' start='20' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>US Immigration FlowMap</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NewFlowMapData (NewFlowMapData)' name='federated.14y3npy074zjaf1500fnq1x97zd3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14y3npy074zjaf1500fnq1x97zd3'>
            <column aggregation='None' caption='BezierValue (bin)' datatype='integer' name='[BezierValue (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_785174482481082368]' peg='0' size='1' />
            </column>
            <column caption='t' datatype='real' name='[Calculation_1540610222319845]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2240610222244150]-1)/100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_2240610222244150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Index()'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_ptlon1_radians' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666117332992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(window_min(min([Origin Longitude]),FIRST(),FIRST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_distance_radians' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666118152193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2*ASIN(sqrt(POWER((sin(([gc_ptlon1_radians (copy)]-[gc_ptat1_radians (copy)])/2)),2) &#10;+ cos([gc_ptlon1_radians (copy)])*cos([gc_ptat1_radians (copy)])*power((sin(([Calculation_37717666117332992]-[gc_ptlon1_radians (copy 2)])/2)),2)))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_a' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666119438339]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sin((1-[Calculation_1540610222319845])*[Calculation_37717666118152193])/sin([Calculation_37717666118152193])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_x' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666119933956]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_37717666119438339]*cos([gc_ptlon1_radians (copy)])*cos([Calculation_37717666117332992]) + [gc_a (copy)]*cos([gc_ptat1_radians (copy)])*cos([gc_ptlon1_radians (copy 2)])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_y' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120077317]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_37717666119438339]*cos([gc_ptlon1_radians (copy)])*sin([Calculation_37717666117332992]) +  [gc_a (copy)]*cos([gc_ptat1_radians (copy)])*sin([gc_ptlon1_radians (copy 2)])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_z' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120261638]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_37717666119438339]*sin([gc_ptlon1_radians (copy)]) + [gc_a (copy)]*sin([gc_ptat1_radians (copy)])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_newlat' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120474631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='atan2([Calculation_37717666120261638],sqrt(power([Calculation_37717666119933956],2)+power([Calculation_37717666120077317],2)))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_newlon' datatype='real' default-format='n#,##0.0000' name='[Calculation_37717666120761352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='atan2([Calculation_37717666120077317],[Calculation_37717666119933956])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_newlat_degress' datatype='real' default-format='n#,##0.00' name='[Calculation_37717666121023497]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_2240610222244150]&#10;when 1 then WINDOW_MIN((AVG([Origin Latitude])),FIRST(),FIRST())&#10;when 100 then WINDOW_MIN((AVG([Target Latitude])),LAST(),LAST())&#10;else DEGREES([Calculation_37717666120474631])&#10;END'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_newlon_degrees' datatype='real' default-format='n#,##0.00' name='[Calculation_37717666121089034]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='CASE [Calculation_2240610222244150]&#10;when 1 THEN WINDOW_MIN((AVG([Origin Longitude])),FIRST(),FIRST())&#10;WHEN 100 THEN WINDOW_MIN((AVG([Target Longitude])),LAST(),LAST())&#10;ELSE DEGREES([Calculation_37717666120761352])&#10;END'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='BezierValue' datatype='integer' name='[Calculation_785174482481082368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Path Order] = 1,1,100)' />
            </column>
            <column aggregation='CountD' datatype='integer' name='[Immigrants]' role='dimension' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Origin Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Origin Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Path Order]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Path]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Target Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Target Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Target Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='gc_b' datatype='real' default-format='n#,##0.0000' name='[gc_a (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sin([Calculation_1540610222319845]*[Calculation_37717666118152193])/sin([Calculation_37717666118152193])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='gc_ptlat2_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptat1_radians (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(window_min(min([Target Latitude]),LAST(),LAST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_ptlon2_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptlon1_radians (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(window_min(min([Target Longitude]),LAST(),LAST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='gc_ptlat1_radians' datatype='real' default-format='n#,##0.0000' name='[gc_ptlon1_radians (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RADIANS(WINDOW_MIN(min([Origin Latitude]),FIRST(),FIRST()))'>
                <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                  <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
                </table-calc>
              </calculation>
            </column>
            <column-instance column='[BezierValue (bin)]' derivation='None' name='[none:BezierValue (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Immigrants]' derivation='None' name='[none:Immigrants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path]' derivation='None' name='[none:Path:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Target Name]' derivation='None' name='[none:Target Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_37717666121023497]' derivation='User' name='[usr:Calculation_37717666121023497:qk]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_2240610222244150]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119438339]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666118152193]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120474631]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120261638]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_1540610222319845]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666117332992]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptat1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy 2)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_a (copy)]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119933956]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120077317]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_37717666121089034]' derivation='User' name='[usr:Calculation_37717666121089034:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_2240610222244150]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120761352]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119438339]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666118152193]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666120077317]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_1540610222319845]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666117332992]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptat1_radians (copy)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_ptlon1_radians (copy 2)]' level-break='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' ordering-type='Field'>
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Path]' />
                <order field='[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]' />
              </table-calc>
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[gc_a (copy)]' ordering-type='Rows' />
              <table-calc field='[federated.14y3npy074zjaf1500fnq1x97zd3].[Calculation_37717666119933956]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14y3npy074zjaf1500fnq1x97zd3].[Exclusions (BezierValue (bin),Immigrants,Path)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:BezierValue (bin):ok]' />
                <groupfilter function='level-members' level='[none:Immigrants:qk]' />
                <groupfilter function='level-members' level='[none:Path:ok]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BezierValue (bin):ok]' member='1' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Immigrants:qk]' member='1093' />
                    <groupfilter function='member' level='[none:Path:ok]' member='831' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BezierValue (bin):ok]' member='2' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Immigrants:qk]' member='3202' />
                    <groupfilter function='member' level='[none:Path:ok]' member='1022' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]'>
            <groupfilter function='member' level='[none:Target Name:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]</column>
            <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[Exclusions (BezierValue (bin),Immigrants,Path)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121089034:qk:3]' field-type='quantitative' max='65698113.214840099' min='-4211757.0529577406' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121023497:qk]' field-type='quantitative' max='26240483.588757627' min='-16657496.979368523' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='border-color' value='#e15759' />
            <format attr='border-color' scope='cols' value='#101010' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' palette='orange_gold_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-width' value='5' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' value='Number of Immigrants' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]' value='Select US state' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Animation Control' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' />
              <size column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' />
              <text column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin:nk]' />
              <path column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin):ok]' />
              <lod column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin):ok]' />
              <lod column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Path:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Origin:&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Destination:&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Immigrants:&#9;</run>
                <run bold='true'>&lt;[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff932d' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-transparency' value='224' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121023497:qk]</rows>
        <cols>[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121089034:qk:3]</cols>
        <pages>
          <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin):ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[BezierValue (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' start='20' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='NewFlowMapData (NewFlowMapData)' name='federated.14y3npy074zjaf1500fnq1x97zd3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14y3npy074zjaf1500fnq1x97zd3'>
            <column aggregation='CountD' datatype='integer' name='[Immigrants]' role='dimension' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Target Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Target Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Target Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Target Latitude]' derivation='Avg' name='[avg:Target Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Target Longitude]' derivation='Avg' name='[avg:Target Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Immigrants]' derivation='None' name='[none:Immigrants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Target Name]' derivation='None' name='[none:Target Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]'>
            <groupfilter function='level-members' level='[none:Target Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Longitude:qk]' field-type='quantitative' max='-6749851.646391755' min='-17996232.768064179' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Latitude:qk]' field-type='quantitative' max='8306192.0881804563' min='1879688.5900819299' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.8176796436309814' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Latitude:qk]</rows>
        <cols>[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Longitude:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Latitude:qk]</field>
                  <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[avg:Target Longitude:qk]</field>
                  <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>36.116202999999999</value>
                <value>-119.68156399999999</value>
                <value>4235643</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='NewFlowMapData (NewFlowMapData)' name='federated.14y3npy074zjaf1500fnq1x97zd3' />
      </datasources>
      <datasource-dependencies datasource='federated.14y3npy074zjaf1500fnq1x97zd3'>
        <column datatype='string' name='[Target Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Target Name]' derivation='None' name='[none:Target Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='10' param='vert' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
              <zone h='98230' id='3' type='layout-basic' w='87361' x='468' y='885'>
                <zone h='98230' id='1' name='Sheet 1' w='87361' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='200' h='98230' id='4' is-fixed='true' param='vert' type='layout-flow' w='11703' x='87829' y='885'>
                <zone h='5752' id='6' mode='dropdown' name='Sheet 1' param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]' type='filter' w='11703' x='87829' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7190' id='7' name='Sheet 1' pane-specification-id='4' param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' type='color' w='11703' x='87829' y='6637'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='262'>
            <card mode='dropdown' param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]' show-all='false' size='27' type='filter' />
            <card pane-specification-id='4' param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' size='40' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[attr:Target Name:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin) (copy):qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin):ok]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Calculation_1246652732521062402:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Calculation_1246652732521148419:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin Latitude:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin Longitude:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Path:ok]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121089034:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='262'>
            <card mode='dropdown' param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]' show-all='false' size='27' type='filter' />
            <card looped='1' size='17' type='currpage' />
            <card pane-specification-id='4' param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' size='40' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>58</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[attr:Target Name:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin) (copy):qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:BezierValue (bin):ok]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Calculation_1246652732521062402:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Calculation_1246652732521148419:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin Latitude:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin Longitude:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Path:ok]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[usr:Calculation_37717666121089034:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Immigrants:qk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Origin:nk]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Path:ok]</field>
            <field>[federated.14y3npy074zjaf1500fnq1x97zd3].[none:Target Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      tqCarQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
